#define BRK() { __current_seg->add_op(0x00, 0, 0); }
#define ORAizx(_val) { __current_seg->add_op(0x01, _val, 1); }
#define ORAz(_val) { __current_seg->add_op(0x05, _val, 1); }
#define ASLz(_val) { __current_seg->add_op(0x06, _val, 1); }
#define PHP() { __current_seg->add_op(0x08, 0, 0); }
#define ORAi(_val) { __current_seg->add_op(0x09, _val, 1); }
#define ASLa() { __current_seg->add_op(0x0A, 0, 0); }
#define ORA(_val) { __current_seg->add_op(0x0D, _val, 2); }
#define ASL(_val) { __current_seg->add_op(0x0E, _val, 2); }
#define BPL(_val) { __current_seg->add_op(0x10, _val, 3); }
#define ORAizy(_val) { __current_seg->add_op(0x11, _val, 1); }
#define ORAzx(_val) { __current_seg->add_op(0x15, _val, 1); }
#define ASLzx(_val) { __current_seg->add_op(0x16, _val, 1); }
#define CLC() { __current_seg->add_op(0x18, 0, 0); }
#define ORAy(_val) { __current_seg->add_op(0x19, _val, 2); }
#define ORAx(_val) { __current_seg->add_op(0x1D, _val, 2); }
#define ASLx(_val) { __current_seg->add_op(0x1E, _val, 2); }
#define JSR(_val) { __current_seg->add_op(0x20, _val, 2); }
#define ANDizx(_val) { __current_seg->add_op(0x21, _val, 1); }
#define BITz(_val) { __current_seg->add_op(0x24, _val, 1); }
#define ANDz(_val) { __current_seg->add_op(0x25, _val, 1); }
#define ROLz(_val) { __current_seg->add_op(0x26, _val, 1); }
#define PLP() { __current_seg->add_op(0x28, 0, 0); }
#define ANDi(_val) { __current_seg->add_op(0x29, _val, 1); }
#define ROLa() { __current_seg->add_op(0x2A, 0, 0); }
#define BIT(_val) { __current_seg->add_op(0x2C, _val, 2); }
#define AND(_val) { __current_seg->add_op(0x2D, _val, 2); }
#define ROL(_val) { __current_seg->add_op(0x2E, _val, 2); }
#define BMI(_val) { __current_seg->add_op(0x30, _val, 3); }
#define ANDizy(_val) { __current_seg->add_op(0x31, _val, 1); }
#define ANDzx(_val) { __current_seg->add_op(0x35, _val, 1); }
#define ROLzx(_val) { __current_seg->add_op(0x36, _val, 1); }
#define SEC() { __current_seg->add_op(0x38, 0, 0); }
#define ANDy(_val) { __current_seg->add_op(0x39, _val, 2); }
#define ANDx(_val) { __current_seg->add_op(0x3D, _val, 2); }
#define ROLx(_val) { __current_seg->add_op(0x3E, _val, 2); }
#define RTI() { __current_seg->add_op(0x40, 0, 0); }
#define EORizx(_val) { __current_seg->add_op(0x41, _val, 1); }
#define EORz(_val) { __current_seg->add_op(0x45, _val, 1); }
#define LSRz(_val) { __current_seg->add_op(0x46, _val, 1); }
#define PHA() { __current_seg->add_op(0x48, 0, 0); }
#define EORi(_val) { __current_seg->add_op(0x49, _val, 1); }
#define LSRa() { __current_seg->add_op(0x4A, 0, 0); }
#define JMP(_val) { __current_seg->add_op(0x4C, _val, 2); }
#define EOR(_val) { __current_seg->add_op(0x4D, _val, 2); }
#define LSR(_val) { __current_seg->add_op(0x4E, _val, 2); }
#define BVC(_val) { __current_seg->add_op(0x50, _val, 3); }
#define EORizy(_val) { __current_seg->add_op(0x51, _val, 1); }
#define EORzx(_val) { __current_seg->add_op(0x55, _val, 1); }
#define LSRzx(_val) { __current_seg->add_op(0x56, _val, 1); }
#define CLI() { __current_seg->add_op(0x58, 0, 0); }
#define EORy(_val) { __current_seg->add_op(0x59, _val, 2); }
#define EORx(_val) { __current_seg->add_op(0x5D, _val, 2); }
#define LSRx(_val) { __current_seg->add_op(0x5E, _val, 2); }
#define RTS() { __current_seg->add_op(0x60, 0, 0); }
#define ADCizx(_val) { __current_seg->add_op(0x61, _val, 1); }
#define ADCz(_val) { __current_seg->add_op(0x65, _val, 1); }
#define RORz(_val) { __current_seg->add_op(0x66, _val, 1); }
#define PLA() { __current_seg->add_op(0x68, 0, 0); }
#define ADCi(_val) { __current_seg->add_op(0x69, _val, 1); }
#define RORa() { __current_seg->add_op(0x6A, 0, 0); }
#define JMPi(_val) { __current_seg->add_op(0x6C, _val, 2); }
#define ADC(_val) { __current_seg->add_op(0x6D, _val, 2); }
#define ROR(_val) { __current_seg->add_op(0x6E, _val, 2); }
#define BVS(_val) { __current_seg->add_op(0x70, _val, 3); }
#define ADCizy(_val) { __current_seg->add_op(0x71, _val, 1); }
#define ADCzx(_val) { __current_seg->add_op(0x75, _val, 1); }
#define RORzx(_val) { __current_seg->add_op(0x76, _val, 1); }
#define SEI() { __current_seg->add_op(0x78, 0, 0); }
#define ADCy(_val) { __current_seg->add_op(0x79, _val, 2); }
#define ADCx(_val) { __current_seg->add_op(0x7D, _val, 2); }
#define RORx(_val) { __current_seg->add_op(0x7E, _val, 2); }
#define STAizx(_val) { __current_seg->add_op(0x81, _val, 1); }
#define STYz(_val) { __current_seg->add_op(0x84, _val, 1); }
#define STAz(_val) { __current_seg->add_op(0x85, _val, 1); }
#define STXz(_val) { __current_seg->add_op(0x86, _val, 1); }
#define DEY() { __current_seg->add_op(0x88, 0, 0); }
#define TXA() { __current_seg->add_op(0x8A, 0, 0); }
#define STY(_val) { __current_seg->add_op(0x8C, _val, 2); }
#define STA(_val) { __current_seg->add_op(0x8D, _val, 2); }
#define STX(_val) { __current_seg->add_op(0x8E, _val, 2); }
#define BCC(_val) { __current_seg->add_op(0x90, _val, 3); }
#define STAizy(_val) { __current_seg->add_op(0x91, _val, 1); }
#define STYzx(_val) { __current_seg->add_op(0x94, _val, 1); }
#define STAzx(_val) { __current_seg->add_op(0x95, _val, 1); }
#define STXzy(_val) { __current_seg->add_op(0x96, _val, 1); }
#define TYA() { __current_seg->add_op(0x98, 0, 0); }
#define STAy(_val) { __current_seg->add_op(0x99, _val, 2); }
#define TXS() { __current_seg->add_op(0x9A, 0, 0); }
#define STAx(_val) { __current_seg->add_op(0x9D, _val, 2); }
#define LDYi(_val) { __current_seg->add_op(0xA0, _val, 1); }
#define LDAizx(_val) { __current_seg->add_op(0xA1, _val, 1); }
#define LDXi(_val) { __current_seg->add_op(0xA2, _val, 1); }
#define LDYz(_val) { __current_seg->add_op(0xA4, _val, 1); }
#define LDAz(_val) { __current_seg->add_op(0xA5, _val, 1); }
#define LDXz(_val) { __current_seg->add_op(0xA6, _val, 1); }
#define TAY() { __current_seg->add_op(0xA8, 0, 0); }
#define LDAi(_val) { __current_seg->add_op(0xA9, _val, 1); }
#define TAX() { __current_seg->add_op(0xAA, 0, 0); }
#define LDY(_val) { __current_seg->add_op(0xAC, _val, 2); }
#define LDA(_val) { __current_seg->add_op(0xAD, _val, 2); }
#define LDX(_val) { __current_seg->add_op(0xAE, _val, 2); }
#define BCS(_val) { __current_seg->add_op(0xB0, _val, 3); }
#define LDAizy(_val) { __current_seg->add_op(0xB1, _val, 1); }
#define LDYzx(_val) { __current_seg->add_op(0xB4, _val, 1); }
#define LDAzx(_val) { __current_seg->add_op(0xB5, _val, 1); }
#define LDXzy(_val) { __current_seg->add_op(0xB6, _val, 1); }
#define CLV() { __current_seg->add_op(0xB8, 0, 0); }
#define LDAy(_val) { __current_seg->add_op(0xB9, _val, 2); }
#define TSX() { __current_seg->add_op(0xBA, 0, 0); }
#define LDYx(_val) { __current_seg->add_op(0xBC, _val, 2); }
#define LDAx(_val) { __current_seg->add_op(0xBD, _val, 2); }
#define LDXy(_val) { __current_seg->add_op(0xBE, _val, 2); }
#define CPYi(_val) { __current_seg->add_op(0xC0, _val, 1); }
#define CMPizx(_val) { __current_seg->add_op(0xC1, _val, 1); }
#define CPYz(_val) { __current_seg->add_op(0xC4, _val, 1); }
#define CMPz(_val) { __current_seg->add_op(0xC5, _val, 1); }
#define DECz(_val) { __current_seg->add_op(0xC6, _val, 1); }
#define INY() { __current_seg->add_op(0xC8, 0, 0); }
#define CMPi(_val) { __current_seg->add_op(0xC9, _val, 1); }
#define DEX() { __current_seg->add_op(0xCA, 0, 0); }
#define CPY(_val) { __current_seg->add_op(0xCC, _val, 2); }
#define CMP(_val) { __current_seg->add_op(0xCD, _val, 2); }
#define DEC(_val) { __current_seg->add_op(0xCE, _val, 2); }
#define BNE(_val) { __current_seg->add_op(0xD0, _val, 3); }
#define CMPizy(_val) { __current_seg->add_op(0xD1, _val, 1); }
#define CMPzx(_val) { __current_seg->add_op(0xD5, _val, 1); }
#define DECzx(_val) { __current_seg->add_op(0xD6, _val, 1); }
#define CLD() { __current_seg->add_op(0xD8, 0, 0); }
#define CMPy(_val) { __current_seg->add_op(0xD9, _val, 2); }
#define CMPx(_val) { __current_seg->add_op(0xDD, _val, 2); }
#define DECx(_val) { __current_seg->add_op(0xDE, _val, 2); }
#define CPXi(_val) { __current_seg->add_op(0xE0, _val, 1); }
#define SBCizx(_val) { __current_seg->add_op(0xE1, _val, 1); }
#define CPXz(_val) { __current_seg->add_op(0xE4, _val, 1); }
#define SBCz(_val) { __current_seg->add_op(0xE5, _val, 1); }
#define INCz(_val) { __current_seg->add_op(0xE6, _val, 1); }
#define INX() { __current_seg->add_op(0xE8, 0, 0); }
#define SBCi(_val) { __current_seg->add_op(0xE9, _val, 1); }
#define NOP() { __current_seg->add_op(0xEA, 0, 0); }
#define CPX(_val) { __current_seg->add_op(0xEC, _val, 2); }
#define SBC(_val) { __current_seg->add_op(0xED, _val, 2); }
#define INC(_val) { __current_seg->add_op(0xEE, _val, 2); }
#define BEQ(_val) { __current_seg->add_op(0xF0, _val, 3); }
#define SBCizy(_val) { __current_seg->add_op(0xF1, _val, 1); }
#define SBCzx(_val) { __current_seg->add_op(0xF5, _val, 1); }
#define INCzx(_val) { __current_seg->add_op(0xF6, _val, 1); }
#define SED() { __current_seg->add_op(0xF8, 0, 0); }
#define SBCy(_val) { __current_seg->add_op(0xF9, _val, 2); }
#define SBCx(_val) { __current_seg->add_op(0xFD, _val, 2); }
#define INCx(_val) { __current_seg->add_op(0xFE, _val, 2); }

/*


AXS abcd        ;8F cd ab    ;No. Cycles= 4
AXS ab          ;87 ab       ;            3
AXS ab,Y        ;97 ab       ;            4
AXS (ab,X)      ;83 ab       ;            6
*/
#define SAX(_val) { __current_seg->add_op(0x8F, _val, 2); }
#define SAXz(_val) { __current_seg->add_op(0x87, _val, 1); }
#define SAXy(_val) { __current_seg->add_op(0x97, _val, 1); }
#define SAXizx(_val) { __current_seg->add_op(0x83, _val, 1); }
